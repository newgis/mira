version: "3.9"
services:
  # Redis cache
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
  # Mongo Database
  mongo:
    image: "mongo:latest"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./data:/data/db
    networks:
      - backend
    restart: always
  #Плотнейший фронт (sit)
  nuxt-app:
    build: ./mira-front
    container_name: nuxt-app
    restart: always
    ports:
      - "3000:3000"
    command: npm run start
#    command: npm install --legacy-peer-deps
    networks:
      - backend
  # Nodejs App
  nodejs:
    build: .
    command: npm start
#    command: npm install
    ports:
      - "5500:5500"
    volumes:
      - .:/usr/src/app
    links:
      - "mongo"
    networks:
      - backend
    restart: always
  # nginx
  nginx:
    depends_on:
      - "nodejs"
      - "mongo"
      - "redis"
      - "nuxt-app"
    image: nginx:latest
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
    - "80:80"
    - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/var/www/static
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    restart: always
    networks:
      - backend
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - backend
    restart: always
networks:
  backend:
    driver: bridge
